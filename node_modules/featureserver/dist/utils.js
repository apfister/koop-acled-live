var esriExtent = require('esri-extent')
var ref = require('./geometry');
var geometryMap = ref.geometryMap;

module.exports = { isTable: isTable, getExtent: getExtent, getGeomType: getGeomType }

/**
 * if we have no extent, but we do have features, then it should be Table
 *
 * @param {object} json
 * @param {object} data
 * @return {boolean}
 */
function isTable (json, data) {
  if (json.geometryType || (json.metadata && json.metadata.geometryType)) { return false }
  var noExtent = !json.fullExtent || !json.fullExtent.xmin || !json.fullExtent.ymin || json.fullExtent.xmin === Infinity
  var hasFeatures = data.features || data[0].features
  if (noExtent && !hasFeatures) { return true }
  else { return false }
}

function getExtent (geojson) {
  if (geojson.metadata && geojson.metadata.extent) { return geojson.metadata.extent }
  else { return esriExtent(geojson) }
}

var esriGeomTypes = {
  polygon: 'esriGeometryPolygon',
  linestring: 'esriGeometryPolyline',
  point: 'esriGeometryPoint'
}

function getGeomType (geojson) {
  if ( geojson === void 0 ) geojson = {};

  // TODO this should find the first non-null geometry
  if (geojson.metadata && geojson.metadata.geometryType) { return geometryMap[geojson.metadata.geometryType] }
  if (!geojson.features || !geojson.features[0]) { return undefined }
  var feature = geojson.features[0]
  if (!feature || !feature.geometry || !feature.geometry.type) { return undefined }
  var type = esriGeomTypes[feature.geometry.type.toLowerCase()]
  return type
}
